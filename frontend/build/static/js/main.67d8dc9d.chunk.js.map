{"version":3,"sources":["assets/img/1.jpg","logo.svg","assets/img/full-screen-image-3.jpg","helpers/apiHelper.jsx","redux/reducers/index.jsx","helpers/authHelper.jsx","redux/actions/auth.jsx","redux/reducers/auth.jsx","redux/store.jsx","components/PrivateRoute/PrivateRoute.jsx","containers/Layout/Navbars/AuthNavbar.jsx","components/Card/Card.jsx","components/CustomButton/CustomButton.jsx","components/ConfirmModal/ConfirmModal.jsx","helpers/commonHelper.jsx","containers/Login/index.jsx","containers/Login/Register.jsx","containers/profile/index.jsx","containers/IDs/AddIdModal.jsx","containers/IDs/EditIdModal.jsx","containers/IDs/index.jsx","routes.js","containers/Layout/Auth.jsx","containers/Layout/Navbars/AdminNavbarLinks.jsx","containers/Layout/Sidebar.jsx","containers/Layout/Navbars/AdminNavbar.jsx","containers/Layout/Admin.jsx","containers/Login/EmailVerification.jsx","containers/Login/ResetPasswordEmail.jsx","containers/Login/ResetPassword.jsx","index.js"],"names":["module","exports","axios","interceptors","request","use","config","NProgress","start","error","done","Promise","reject","response","withAuth","headers","AuthHelper","getAccessToken","base","method","url","data","secure","state","store","getState","isAccessTokenExpired","auth","dispatch","refreshToken","then","res","ApiHelper","forEach","bind","history","login","email","password","post","register","firstName","lastName","getUserInfo","get","access","token","getRefreshToken","refresh","exp","Date","getTime","isRefreshTokenExpired","isAuthenticated","updateProfile","profile","put","type","payload","catch","err","initialState","isFetching","undefined","action","jwtDecode","user","createBrowserHistory","persistedFilter","createFilter","reducer","persistReducer","key","storage","whitelist","transforms","combineReducers","router","connectRouter","toastr","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","routerMiddleware","persistor","persistStore","connect","Component","component","rest","render","props","to","pathname","from","location","PagesHeader","mobileSidebarToggle","width","innerWidth","routeName","indexOf","e","document","documentElement","classList","toggle","this","setState","addEventListener","updateWidth","Navbar","collapseOnSelect","inverse","className","Header","Brand","Toggle","onClick","Collapse","activeRoute","Card","hidden","calendar","plain","wizard","title","category","textCenter","ctAllIcons","ctFullWidth","ctTextCenter","tableFullWidth","content","stats","legend","ftTextCenter","CustomButton","fill","simple","pullRight","block","wd","round","icon","neutral","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","btnClasses","cx","Button","ConfirmModal","Modal","show","onHide","dismiss","backdrop","enableEscape","keyboard","closeButton","Title","Body","confirmation","Footer","cancelLabel","bsStyle","proceed","okLabel","defaultProps","confirmable","validateEmail","test","String","toLowerCase","showConfirmModal","createConfirmation","LoginPage","handleLogin","preventDefault","target","elements","value","errors","non_field_errors","push","handleChangeInput","name","cardHidden","setTimeout","Grid","Row","Col","md","sm","mdOffset","smOffset","Form","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","FormFeedback","href","style","marginLeft","autoComplete","username","RegisterPage","handleRegister","confirmPwd","first_name","last_name","success","status","AuthNavbar","data-color","data-image","bgImage","backgroundImage","EditProfile","handleSave","phone_number","phoneNumber","fluid","horizontal","disabled","mapDispatchToProps","AddIdModal","onClickAdd","idName","idInfo","id_name","id_type","idType","id_role","multipleSelect","id_info","console","Input","fontSize","marginTop","classNamePrefix","closeMenuOnSelect","isMulti","options","label","isDisabled","rows","componentClass","EditIdModal","onClickSave","selectedID","id","info","log","IDTables","showAddIdModal","hideAddIdModal","onAddId","ids","onEditId","index","findIndex","item","hideEditIdModal","openEditIdModal","row","stopPropagation","showEditIdModal","deleteId","userID","confirm","delete","splice","renderCell","edit","Tooltip","remove","OverlayTrigger","placement","overlay","original","getIds","marginBottom","columns","accessor","sortable","Cell","moment","updated_at","format","filterable","textAlign","defaultPageSize","showPaginationTop","showPaginationBottom","noDataText","routes","path","Pages","getRoutes","map","prop","pageClass","getPageClass","HeaderLinks","pullLeft","InputGroup","Addon","Sidebar","getCollapseStates","collapse","getCollapseInitialState","views","createLinks","userRole","user_role","redirect","st","in","activeClassName","mini","openAvatar","i","length","updateDimensions","userName","color","image","hasImage","src","logo","alt","ref","avatar","logout","AdminNavbarLinks","AdminNavbar","getActiveRoute","collapseActiveRoute","navbar","handleMiniClick","Dashboard","body","exact","routeProps","scrollTop","scrollingElement","refs","mainPanel","EmailVerificationPage","handleVerify","code","handleCancel","handleResend","ResetPasswordEmail","handleSubmit","users","ResetPassword","confirmPassword","uid","parameters","queryString","parse","search","invalid","ReactDOM","loading","Fragment","Auth","AdminLayout","timeOut","transitionIn","transitionOut","getElementById"],"mappings":"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","file":"static/js/main.67d8dc9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.ef269d9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/full-screen-image-3.ef9c8d65.jpg\";","import axios from 'axios';\r\nimport AuthHelper from './authHelper.jsx';\r\nimport {store} from '../redux/store.jsx';\r\nimport {refreshToken} from '../redux/actions/auth.jsx';\r\nimport NProgress from 'nprogress';\r\n\r\naxios.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  NProgress.start();\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  NProgress.done();\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  NProgress.done();\r\n  return response;\r\n}, function (error) {\r\n  NProgress.done();\r\n  // Do something with response error\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst withAuth = (headers = {}) => {\r\n  return {\r\n    ...headers,\r\n    'Authorization': 'Bearer ' + AuthHelper.getAccessToken(),\r\n  }\r\n};\r\n\r\nconst base = (method, url, data = {}, headers = {}, secure = true) => {\r\n  if (secure) {\r\n    let state = store.getState();\r\n    if (AuthHelper.isAccessTokenExpired(state.auth)) {\r\n      return store.dispatch(refreshToken())\r\n        .then(res => {\r\n          return axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: withAuth(headers),\r\n          });\r\n        })\r\n    } else {\r\n      return axios({\r\n        method,\r\n        url,\r\n        data,\r\n        headers: withAuth(headers),\r\n      });\r\n    }\r\n  } else {\r\n    return axios({\r\n      method,\r\n      url,\r\n      data,\r\n      headers,\r\n    });\r\n  }\r\n};\r\n\r\nconst ApiHelper = {};\r\n\r\n['get', 'post', 'put', 'patch', 'delete'].forEach(method => {\r\n  ApiHelper[method] = base.bind(null, method);\r\n});\r\n\r\nexport default ApiHelper;\r\n","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport {reducer as toastr} from 'react-redux-toastr';\r\nimport auth from './auth';\r\n\r\nexport default (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  auth,\r\n  toastr,\r\n});\r\n","import {store} from '../redux/store.jsx';\r\nimport ApiHelper from './apiHelper.jsx';\r\n\r\nclass AuthHelper {\r\n  login = (email, password) => {\r\n    return ApiHelper.post('/api/auth/login', {email, password}, {}, false);\r\n  };\r\n\r\n  register = (firstName, lastName, email, password) => {\r\n    return ApiHelper.post('/api/auth/register', {firstName, lastName, email, password}, {}, false);\r\n  };\r\n\r\n  refreshToken = data => {\r\n    return ApiHelper.post('/api/auth/token/refresh', data, {}, false);\r\n  };\r\n\r\n  getUserInfo = () => {\r\n    return ApiHelper.get('/api/auth/user');\r\n  };\r\n\r\n  getAccessToken = () => {\r\n    let state = store.getState();\r\n    if (state.auth.access) {\r\n      return state.auth.access.token;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  getRefreshToken = () => {\r\n    let state = store.getState();\r\n    if (state.auth.refresh) {\r\n      return state.auth.refresh.token;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  isAccessTokenExpired = state => {\r\n    if (state.access && state.access.exp) {\r\n      return 1000 * state.access.exp - (new Date()).getTime() < 5000;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  isRefreshTokenExpired = state => {\r\n    if (state.refresh && state.refresh.exp) {\r\n      return 1000 * state.refresh.exp - (new Date()).getTime() < 5000;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  isAuthenticated = state => {\r\n    return !this.isRefreshTokenExpired(state);\r\n  };\r\n\r\n  updateProfile = profile => {\r\n    return ApiHelper.put('/api/auth/user', profile);\r\n  }\r\n\r\n}\r\n\r\nexport default new AuthHelper();\r\n\r\n","import AuthHelper from '../../helpers/authHelper.jsx';\r\nimport {toastr} from \"react-redux-toastr\";\r\n\r\nexport const LOGIN_REQUEST = 'auth/LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'auth/LOGIN_FAILURE';\r\nexport const LOGOUT = 'auth/LOGOUT';\r\nexport const REFRESH_TOKEN_REQUEST = 'auth/REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_SUCCESS = 'auth/REFRESH_TOKEN_SUCCESS';\r\nexport const REFRESH_TOKEN_FAILURE = 'auth/REFRESH_TOKEN_FAILURE';\r\nexport const GET_USER_INFO_REQUEST = 'auth/GET_USER_INFO_REQUEST';\r\nexport const GET_USER_INFO_SUCCESS = 'auth/GET_USER_INFO_SUCCESS';\r\nexport const GET_USER_INFO_FAILURE = 'auth/GET_USER_INFO_FAILURE';\r\nexport const SIGNUP_REQUEST = 'auth/SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'auth/SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILURE = 'auth/SIGNUP_FAILURE';\r\n\r\nexport const login = (username, password) => dispatch => {\r\n  dispatch({type: LOGIN_REQUEST});\r\n  return AuthHelper.login(username, password)\r\n    .then(res => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }).catch(err => {\r\n      dispatch({\r\n        type: LOGIN_FAILURE,\r\n      });\r\n      throw(err);\r\n    });\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n};\r\n\r\nexport const refreshToken = () => (dispatch, getState) => {\r\n  let token = getState().auth.refresh.token;\r\n  dispatch({type: REFRESH_TOKEN_REQUEST});\r\n  return AuthHelper.refreshToken({refresh: token})\r\n    .then(res => {\r\n      dispatch({\r\n        type: REFRESH_TOKEN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    }).catch(err => {\r\n      dispatch({\r\n        type: REFRESH_TOKEN_FAILURE,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getUserInfo = () => dispatch => {\r\n  dispatch({type: GET_USER_INFO_REQUEST});\r\n  return AuthHelper.getUserInfo()\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_USER_INFO_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    }).catch(err => {\r\n      dispatch({\r\n        type: GET_USER_INFO_FAILURE,\r\n      });\r\n    });\r\n};\r\n\r\nexport const signup = (userInfo) => dispatch => {\r\n  dispatch({type: SIGNUP_REQUEST});\r\n  return AuthHelper.register(userInfo)\r\n    .then(res => {\r\n      dispatch({\r\n        type: SIGNUP_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      toastr.success('Success!', 'Account created successfully.');\r\n    }).catch(err => {\r\n      dispatch({\r\n        type: SIGNUP_FAILURE,\r\n      });\r\n      throw(err);\r\n    });\r\n};","import jwtDecode from 'jwt-decode';\r\nimport * as auth from '../actions/auth.jsx';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  access: undefined,\r\n  refresh: undefined,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case auth.LOGIN_SUCCESS:\r\n    case auth.REFRESH_TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        access: {\r\n          token: action.payload.access,\r\n          ...jwtDecode(action.payload.access)\r\n        },\r\n        refresh: {\r\n          token: action.payload.refresh,\r\n          ...jwtDecode(action.payload.refresh)\r\n        },\r\n        isFetching: false,\r\n      };\r\n\r\n    case auth.LOGIN_REQUEST:\r\n    case auth.REFRESH_TOKEN_REQUEST:\r\n    case auth.GET_USER_INFO_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n    case auth.LOGIN_FAILURE:\r\n    case auth.LOGOUT:\r\n    case auth.REFRESH_TOKEN_FAILURE:\r\n    case auth.GET_USER_INFO_FAILURE:\r\n      return initialState;\r\n\r\n    case auth.GET_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}","import storage from 'redux-persist/es/storage';\r\nimport {applyMiddleware, createStore, compose} from 'redux';\r\nimport {createFilter} from 'redux-persist-transform-filter';\r\nimport {persistReducer, persistStore} from 'redux-persist';\r\nimport {routerMiddleware} from 'connected-react-router';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst persistedFilter = createFilter('auth', ['access', 'refresh']);\r\n\r\nconst reducer = persistReducer(\r\n  {\r\n    key: 'polls',\r\n    storage: storage,\r\n    whitelist: ['auth'],\r\n    transforms: [persistedFilter]\r\n  }, rootReducer(history));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  reducer, {},\r\n  composeEnhancers(applyMiddleware(thunk, routerMiddleware(history))));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router';\r\nimport {connect} from 'react-redux';\r\nimport AuthHelper from \"../../helpers/authHelper.jsx\";\r\n\r\nconst PrivateRoute = ({component: Component, isAuthenticated, ...rest}) => (\r\n  <Route {...rest} render={props => (\r\n    isAuthenticated ? (\r\n      <Component {...props}/>\r\n    ) : (\r\n      <Redirect to={{\r\n        pathname: '/login',\r\n        state: {from: props.location}\r\n      }}/>\r\n    )\r\n  )}/>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: AuthHelper.isAuthenticated(state.auth),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute);","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass PagesHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n\n  activeRoute(routeName) {\n    return window.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n  mobileSidebarToggle(e) {\n    document.documentElement.classList.toggle(\"nav-open\");\n  }\n  updateWidth() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\n  }\n  render() {\n    return (\n      <Navbar\n        collapseOnSelect\n        inverse\n        className=\"navbar-primary navbar-transparent navbar-absolute\"\n      >\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to={\"/dashboard\"} className=\"nav-link\">\n              {this.state.width > 429\n                ? \"Home\"\n                : \"Home\"}\n            </NavLink>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li className={this.activeRoute(\"login\")}>\n              <NavLink to={\"/login\"} className=\"nav-link\">\n                <i className=\"fa fa-drivers-license-o\" />\n                <p>Login</p>\n              </NavLink>\n            </li>\n            <li className={this.activeRoute(\"register\")}>\n              <NavLink to={\"/register\"} className=\"nav-link\">\n                <i className=\"fa fa-user-circle-o\" />\n                <p>Register</p>\n              </NavLink>\n            </li>\n          </ul>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default PagesHeader;\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div\n        className={\n          \"card\" +\n          (this.props.hidden ? \" card-hidden\" : \"\") +\n          (this.props.calendar ? \" card-calendar\" : \"\") +\n          (this.props.plain ? \" card-plain\" : \"\") +\n          (this.props.wizard ? \" card-wizard\" : \"\")\n        }\n      >\n        {this.props.title !== undefined || this.props.category !== undefined ? (\n          <div\n            className={\"header\" + (this.props.textCenter ? \" text-center\" : \"\")}\n          >\n            <h4 className=\"title\">{this.props.title}</h4>\n            <p className=\"category\">{this.props.category}</p>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div\n          className={\n            \"content\" +\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n            (this.props.ctFullWidth ? \" content-full-width\" : \"\") +\n            (this.props.ctTextCenter ? \" text-center\" : \"\") +\n            (this.props.tableFullWidth ? \" table-full-width\" : \"\")\n          }\n        >\n          {this.props.content}\n        </div>\n        {this.props.stats !== undefined || this.props.legend !== undefined ? (\n          <div\n            className={\n              \"footer\" + (this.props.ftTextCenter ? \" text-center\" : \"\")\n            }\n          >\n            {this.props.legend !== undefined ? (\n              <div className=\"legend\">{this.props.legend}</div>\n            ) : null}\n            {this.props.stats !== undefined ? <hr /> : null}\n            {this.props.stats !== undefined ? (\n              <div className=\"stats\">{this.props.stats}</div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the props of this component to bool\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      fill,\n      simple,\n      pullRight,\n      block,\n      wd,\n      round,\n      icon,\n      neutral,\n      twitter,\n      facebook,\n      google,\n      linkedin,\n      pinterest,\n      youtube,\n      tumblr,\n      github,\n      behance,\n      dribbble,\n      reddit,\n      stumbleupon,\n      ...rest\n    } = this.props;\n\n    const btnClasses = cx({\n      \"btn-fill\": fill,\n      \"btn-simple\": simple,\n      \"pull-right\": pullRight,\n      \"btn-block\": block,\n      \"btn-wd\": wd,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-social btn-twitter\": twitter,\n      \"btn-social btn-facebook\": facebook,\n      \"btn-social btn-google\": google,\n      \"btn-social btn-linkedin\": linkedin,\n      \"btn-social btn-pinterest\": pinterest,\n      \"btn-social btn-youtube\": youtube,\n      \"btn-social btn-tumblr\": tumblr,\n      \"btn-social btn-github\": github,\n      \"btn-social btn-behance\": behance,\n      \"btn-social btn-dribbble\": dribbble,\n      \"btn-social btn-reddit\": reddit,\n      \"btn-social btn-stumbleupon\": stumbleupon\n    });\n\n    return <Button className={btnClasses} {...rest} />;\n  }\n}\n\nCustomButton.propTypes = {\n  fill: PropTypes.bool,\n  simple: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  block: PropTypes.bool,\n  wd: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  twitter: PropTypes.bool,\n  facebook: PropTypes.bool,\n  google: PropTypes.bool,\n  linkedin: PropTypes.bool,\n  pinterest: PropTypes.bool,\n  youtube: PropTypes.bool,\n  tumblr: PropTypes.bool,\n  github: PropTypes.bool,\n  behance: PropTypes.bool,\n  dribbble: PropTypes.bool,\n  reddit: PropTypes.bool,\n  stumbleupon: PropTypes.bool\n};\n\nexport default CustomButton;\n","import React from 'react';\r\nimport { Modal} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { confirmable } from 'react-confirm';\r\nimport Button from \"../../components/CustomButton/CustomButton\";\r\n\r\nconst ConfirmModal = props => (\r\n  <Modal show={props.show} onHide={props.dismiss} backdrop={props.enableEscape ? true : 'static'} keyboard={props.enableEscape}>\r\n    <Modal.Header closeButton>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{props.confirmation}</Modal.Body>\r\n\r\n    <Modal.Footer>\r\n      {props.cancelLabel !== 'null' &&\r\n        <Button simple onClick={props.dismiss}>{props.cancelLabel}</Button>\r\n      }\r\n      <Button bsStyle=\"success\" fill onClick={props.proceed}>{props.okLabel}</Button>\r\n    </Modal.Footer>\r\n\r\n  </Modal>\r\n);\r\n\r\nConfirmModal.propTypes = {\r\n  okLabel: PropTypes.string,\r\n  cancelLabel: PropTypes.string,\r\n  title: PropTypes.string,\r\n  confirmation: PropTypes.any,\r\n  show: PropTypes.bool,\r\n  proceed: PropTypes.func,     // called when ok button is clicked.\r\n  cancel: PropTypes.func,      // called when cancel button is clicked.\r\n  dismiss: PropTypes.func,     // called when backdrop is clicked or escaped.\r\n  enableEscape: PropTypes.bool,\r\n};\r\n\r\nConfirmModal.defaultProps = {\r\n  okLabel: 'OK',\r\n  cancelLabel: 'Cancel',\r\n  enableEscape: true,\r\n};\r\n\r\nexport default confirmable(ConfirmModal);\r\n","import {createConfirmation} from 'react-confirm';\r\nimport ConfirmModal from '../components/ConfirmModal/ConfirmModal.jsx';\r\nimport moment from 'moment';\r\n\r\nconst validateEmail = (email) => {\r\n  // var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nconst showConfirmModal = createConfirmation(ConfirmModal);\r\n\r\nconst confirm = (confirmation, options = {}) => {\r\n\r\n  return showConfirmModal({confirmation, ...options});\r\n};\r\n\r\n// const countryFormatter = (cell, row) =>{\r\n//   if(!cell)\r\n//     return null;\r\n//   return getName(cell);\r\n// }\r\n\r\nconst timestampFormatter = (cell, row) => {\r\n  let date = moment(cell);\r\n  return date.format('YYYY-MM-DD HH:mm');\r\n};\r\n\r\nexport {\r\n  validateEmail,\r\n  confirm,\r\n  timestampFormatter\r\n}","import React, { Component } from \"react\";\r\nimport {Grid, Row, Col, FormGroup, ControlLabel, FormControl, Form} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router\";\r\nimport FormFeedback from \"reactstrap/es/FormFeedback\";\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport AuthHelper from '../../helpers/authHelper.jsx';\r\nimport {login} from '../../redux/actions/auth.jsx';\r\nimport {validateEmail} from '../../helpers/commonHelper.jsx';\r\nimport {toastr} from \"react-redux-toastr\";\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardHidden: true,\r\n      errors: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(\r\n      function() {\r\n        this.setState({ cardHidden: false });\r\n      }.bind(this),\r\n      700\r\n    );\r\n  }\r\n\r\n  handleLogin = e => {\r\n    e.preventDefault();\r\n\r\n    let email = e.target.elements.email.value;\r\n    let password = e.target.elements.password.value;\r\n    let errors = this.state.errors;\r\n\r\n    if (email === '') {\r\n      errors.email = 'Email is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      errors.email = 'Email is invalid.';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (password === '') {\r\n      errors.password = 'Password is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    this.props.login(email, password)\r\n      .catch(err => {\r\n        // console.log(err.response.data.non_field_errors[0]);\r\n        if (err.response.data.non_field_errors[0] === 'register') {\r\n          toastr.error('Login Failed!', 'Please register');\r\n          this.props.history.push('/register')\r\n        }else if (err.response.data.non_field_errors[0] === 'email') {\r\n          toastr.error('Login Failed!', 'Please verify your email address');\r\n          this.props.history.push('/login/email_verification')\r\n        }\r\n      })\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState(errors);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isAuthenticated) {\r\n      return (\r\n        <Redirect to='/id'/>\r\n      )\r\n    } else {\r\n      let {errors} = this.state;\r\n      const url = `/reset_password`;\r\n      return (\r\n        <Grid>\r\n          <Row>\r\n            <Col md={4} sm={6} mdOffset={4} smOffset={3}>\r\n              <Form onSubmit={this.handleLogin}>\r\n                <Card\r\n                  hidden={this.state.cardHidden}\r\n                  textCenter\r\n                  title=\"Login\"\r\n                  content={\r\n                    <div>\r\n                      <FormGroup>\r\n                        <ControlLabel>Email address<span className=\"star\">*</span></ControlLabel>\r\n                        <FormControl placeholder=\"Enter email\" name=\"email\" type=\"email\"\r\n                                     onChange={this.handleChangeInput}/>\r\n                        <FormFeedback className=\"text-danger\">{errors.email}</FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <ControlLabel>\r\n                          Password<span className=\"star\">*</span>\r\n                          <a href={url}><span style={{marginLeft: '140px'}}>Forgot Password?</span></a>\r\n                        </ControlLabel>\r\n                        <FormControl placeholder=\"Password\" name=\"password\" type=\"password\" autoComplete=\"off\"\r\n                                     onChange={this.handleChangeInput}/>\r\n                        <FormFeedback className=\"text-danger\">{errors.password}</FormFeedback>\r\n                      </FormGroup>\r\n                    </div>\r\n                  }\r\n                  legend={\r\n                    <Button bsStyle=\"info\" fill wd type=\"submit\">\r\n                      Login\r\n                    </Button>\r\n                  }\r\n                  ftTextCenter\r\n                />\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: AuthHelper.isAuthenticated(state.auth)\r\n});\r\n\r\n// const mapDispatchToProps = {\r\n//   login,\r\n// };\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (username, password) => dispatch(login(username, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { Component } from \"react\";\r\nimport {Grid, Row, Col, FormGroup, ControlLabel, FormControl, Form} from \"react-bootstrap\";\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport AuthNavbar from '../Layout/Navbars/AuthNavbar'\r\nimport bgImage from \"../../assets/img/full-screen-image-3.jpg\";\r\nimport FormFeedback from \"reactstrap/es/FormFeedback\";\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport ApiHelper from \"../../helpers/apiHelper\";\r\nimport {validateEmail} from '../../helpers/commonHelper.jsx';\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardHidden: true,\r\n      errors: {\r\n        email: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        password: '',\r\n        confirmPwd: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(\r\n      function() {\r\n        this.setState({ cardHidden: false });\r\n      }.bind(this),\r\n      700\r\n    );\r\n  }\r\n\r\n  handleRegister = e => {\r\n    e.preventDefault();\r\n\r\n    let email = e.target.elements.email.value;\r\n    let firstName = e.target.elements.firstName.value;\r\n    let lastName = e.target.elements.lastName.value;\r\n    let password = e.target.elements.password.value;\r\n    let confirmPwd = e.target.elements.confirmPwd.value;\r\n    let errors = this.state.errors;\r\n\r\n    if (firstName === '') {\r\n      errors.firstName = 'First name is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (lastName === '') {\r\n      errors.lastName = 'Last name is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      errors.email = 'Email is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      errors.email = 'Email is invalid.';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (password === '') {\r\n      errors.password = 'Password is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (confirmPwd !== password) {\r\n      errors.confirmPwd = 'Password does not match';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    ApiHelper.post('/api/auth/register', {\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      email: email,\r\n      password: password\r\n    }, {}, false).then(res => {\r\n      toastr.success('Success!', 'User was successfully registered.');\r\n      this.props.history.push('/login');\r\n    }).catch(err => {\r\n      if (err.response.status === 400){\r\n        toastr.error('Fail!', 'This email has already registered, please login or use another email to signup');\r\n        this.props.history.push('/login')\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState(errors);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {errors} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AuthNavbar />\r\n        <div className=\"wrapper wrapper-full-page\">\r\n          <div\r\n            className={\"full-page login\"}\r\n            data-color=\"black\"\r\n            data-image={bgImage}\r\n          >\r\n            <div className=\"content\">\r\n              <Grid>\r\n                <Row>\r\n                  <Col md={5} sm={6} mdOffset={4} smOffset={3}>\r\n                    <Form onSubmit={this.handleRegister}>\r\n                      <Card\r\n                        hidden={this.state.cardHidden}\r\n                        textCenter\r\n                        title=\"Register\"\r\n                        content={\r\n                          <div>\r\n                            <FormGroup>\r\n                              <ControlLabel>First Name<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"First Name\" name=\"firstName\" type=\"text\"\r\n                                           onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.firstName}</FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <ControlLabel>Last Name<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"Last Name\" name=\"lastName\" type=\"text\"\r\n                                           onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.lastName}</FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <ControlLabel>Email address<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"Email Address\" name=\"email\" type=\"email\"\r\n                                           onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.email}</FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <ControlLabel>Password<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"Password\" name=\"password\" type=\"password\" autoComplete=\"off\"\r\n                                           onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.password}</FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <ControlLabel>Confirm Password<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"Confirm Password\" name=\"confirmPwd\" type=\"password\"\r\n                                           autoComplete=\"off\" onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.confirmPwd}</FormFeedback>\r\n                            </FormGroup>\r\n                          </div>\r\n                        }\r\n                        legend={\r\n                          <Button bsStyle=\"info\" fill wd type=\"submit\">\r\n                            Register\r\n                          </Button>\r\n                        }\r\n                        ftTextCenter\r\n                      />\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              className=\"full-page-background\"\r\n              style={{ backgroundImage: \"url(\" + bgImage + \")\" }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { Component } from \"react\";\nimport {Grid, Row, Col, FormGroup, ControlLabel, FormControl, Form} from \"react-bootstrap\"\nimport {FormFeedback} from \"reactstrap\"\nimport {toastr} from \"react-redux-toastr\";\nimport {connect} from \"react-redux\"\nimport AuthHelper from \"../../helpers/authHelper\";\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\nimport {GET_USER_INFO_SUCCESS} from '../../redux/actions/auth';\nimport {validateEmail} from '../../helpers/commonHelper';\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: this.props.user.email,\n      firstName: this.props.user.first_name,\n      lastName: this.props.user.last_name,\n      errors: {\n        email: '',\n        firstName: '',\n        lastName: '',\n      }\n    }\n\n    if (this.props.user.phone_number){\n      this.state.phoneNumber = this.props.user.phone_number\n    } else {\n      this.state.phoneNumber = ''\n    }\n  }\n\n  handleChangeInput = e => {\n    let errors = this.state.errors;\n    if (errors[e.target.name] !== '') {\n      errors[e.target.name] = '';\n      this.setState({errors});\n    }\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  handleSave = e => {\n    e.preventDefault();\n\n    if (this.state.email === '') {\n      let errors = this.state.errors;\n      errors.email = 'Email is required.';\n      this.setState({errors});\n      return;\n    }\n\n    if (!validateEmail(this.state.email)) {\n      let errors = this.state.errors;\n      errors.email = 'Email is invalid.';\n      this.setState({errors});\n      return;\n    }\n\n    AuthHelper.updateProfile({\n      first_name: this.state.firstName,\n      last_name: this.state.lastName,\n      email: this.state.email,\n      phone_number: this.state.phoneNumber\n    }).then(res => {\n        this.props.updateProfile(res.data);\n        toastr.success('Success!', 'Profile was successfully updated.');\n      }).catch(err => {\n        let errors = this.state.errors;\n        let data = err.response.data;\n        for(let key in data) {\n          errors[key] = data[key][0];\n          this.setState({errors});\n        }\n    });\n\n  }\n\n  render() {\n    const {\n      errors,\n      email,\n      firstName,\n      lastName,\n      phoneNumber,\n    } = this.state\n\n    if (!this.props.user){\n      return null\n    }\n\n    return (\n      <div className=\"main-content\">\n        <Grid fluid>\n          <Row>\n            <Col md={6}>\n              <Form horizontal>\n                <FormGroup>\n                  <ControlLabel className=\"col-md-3\">First Name<span className=\"star\">*</span></ControlLabel>\n                  <Col md={9}>\n                    <FormControl placeholder=\"First Name\" type=\"text\" name=\"firstName\" value={firstName}\n                         onChange={this.handleChangeInput}/>\n                    <FormFeedback className=\"text-danger\">{errors.firstName}</FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup>\n                  <ControlLabel className=\"col-md-3\">Last Name<span className=\"star\">*</span></ControlLabel>\n                  <Col md={9}>\n                    <FormControl placeholder=\"Last Name\" type=\"text\" name=\"lastName\" value={lastName}\n                         onChange={this.handleChangeInput}/>\n                    <FormFeedback className=\"text-danger\">{errors.lastName}</FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup>\n                  <ControlLabel className=\"col-md-3\">Email<span className=\"star\">*</span></ControlLabel>\n                  <Col md={9}>\n                    <FormControl placeholder=\"Email\" type=\"email\" name=\"email\" value={email} disabled/>\n                  </Col>\n                </FormGroup>\n                <FormGroup>\n                  <ControlLabel className=\"col-md-3\">Phone Number</ControlLabel>\n                  <Col md={9}>\n                    <FormControl placeholder=\"Phone Number\" type=\"text\" name=\"phoneNumber\" value={phoneNumber}\n                         onChange={this.handleChangeInput}/>\n                    <FormFeedback className=\"text-danger\">{errors.phoneNumber}</FormFeedback>\n                  </Col>\n                </FormGroup>\n                <FormGroup>\n                  <Col md={3}></Col>\n                  <Col md={9}>\n                    <Button bsStyle=\"info\" pullRight fill onClick={this.handleSave}>\n                      Update Profile\n                    </Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user\n});\n\nconst mapDispatchToProps = {\n  updateProfile: payload => {\n    return {\n      type: GET_USER_INFO_SUCCESS,\n      payload\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n","import React, {Component} from \"react\"\r\nimport { Form, ControlLabel, Col, FormControl, FormGroup, Modal, DropdownButton} from \"react-bootstrap\"\r\nimport {Input, FormFeedback } from \"reactstrap\"\r\nimport PropTypes from \"prop-types\";\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport Button from \"../../components/CustomButton/CustomButton\";\r\nimport ApiHelper from '../../helpers/apiHelper.jsx';\r\nimport Select from \"react-select\";\r\n// import Checkbox from \"../../components/CustomCheckbox/CustomCheckbox\";\r\n\r\nclass AddIdModal extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idName: '',\r\n      idType: 'Entity',\r\n      idInfo: '',\r\n      multipleSelect: null,\r\n      status: 'Active',\r\n      errors: {\r\n        idName: '',\r\n        idInfo: '',\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState({errors});\r\n    }\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onClickAdd = () => {\r\n    let errors = this.state.errors;\r\n    if (this.state.idName === '') {\r\n      errors.idName = 'ID name is required.';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (this.state.idInfo === '') {\r\n      errors.idInfo = 'ID info is required.';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    ApiHelper.post('/api/id/', {\r\n      id_name: this.state.idName,\r\n      id_type: this.state.idType,\r\n      id_role: this.state.multipleSelect,\r\n      id_info: this.state.idInfo,\r\n      status: this.state.status,\r\n    }).then(res => {\r\n      toastr.success('Success!', 'ID was successfully added.');\r\n      this.props.onSubmit(res.data);\r\n    }).catch(err => {\r\n      console.error(err);\r\n      for(let key in err.response.data.errors) {\r\n        errors[key] = err.response.data.errors[key];\r\n        this.setState({errors});\r\n      }\r\n      toastr.error('Fail!', 'Failed to add ID.');\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      errors,\r\n      idName,\r\n      idType,\r\n      idInfo,\r\n      status,\r\n    } = this.state;\r\n\r\n    const {\r\n      show,\r\n      onHide\r\n    } = this.props;\r\n\r\n    return(\r\n      <Modal\r\n        show={show} onHide={onHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add ID</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form horizontal>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Name<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <FormControl placeholder=\"ID Name\" type=\"text\" name=\"idName\" value={idName}\r\n                     onChange={this.handleChangeInput}/>\r\n                <FormFeedback className=\"text-danger\">{errors.idName}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Type<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <Input type=\"select\" className=\"browser-default custom-select\" name=\"idType\" value={idType}\r\n                        onChange={this.handleChangeInput} style={{fontSize: 16, marginTop:10}}>\r\n                  <option value={'Entity'}>Entity</option>\r\n                  <option value={'Individual'}>Individual</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Status<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <Input type=\"select\" className=\"browser-default custom-select\" name=\"status\" value={status}\r\n                        onChange={this.handleChangeInput} style={{fontSize: 16, marginTop:10}}>\r\n                  <option value={'Active'}>Active</option>\r\n                  <option value={'Deleted'}>Deleted</option>\r\n                  <option value={'OnHold'}>OnHold</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Roles<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <Select\r\n                  className=\"react-select info\"\r\n                  classNamePrefix=\"react-select\"\r\n                  placeholder=\"Choose Roles\"\r\n                  name=\"multipleSelect\"\r\n                  closeMenuOnSelect={false}\r\n                  isMulti\r\n                  value={this.state.multipleSelect}\r\n                  onChange={value =>\r\n                    this.setState({ multipleSelect: value })\r\n                  }\r\n                  options={[\r\n                    {\r\n                      value: \"\",\r\n                      label: \" Multiple Options\",\r\n                      isDisabled: true\r\n                    },\r\n                    { value: \"2\", label: \"Customer\" },\r\n                    { value: \"3\", label: \"Vendor\" },\r\n                    { value: \"4\", label: \"Lead\" },\r\n                    { value: \"5\", label: \"Contact\" },\r\n                    { value: \"6\", label: \"Employee\" },\r\n                    { value: \"7\", label: \"Contractor\" },\r\n                  ]}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Info<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <FormControl rows=\"5\" componentClass=\"textarea\" placeholder=\"Info\" name=\"idInfo\" value={idInfo}\r\n                     onChange={this.handleChangeInput}/>\r\n                <FormFeedback className=\"text-danger\">{errors.idInfo}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button simple onClick={onHide}>Cancel</Button>\r\n          <Button bsStyle=\"success\" fill onClick={this.onClickAdd}>Add</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nAddIdModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  onHide: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddIdModal\r\n","import React, {Component} from \"react\"\r\nimport { Form, ControlLabel, Col, FormControl, FormGroup, Modal} from \"react-bootstrap\"\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport Button from \"../../components/CustomButton/CustomButton\";\r\nimport {Input, FormFeedback} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport ApiHelper from '../../helpers/apiHelper.jsx';\r\nimport Select from \"react-select\";\r\n\r\nclass EditIdModal extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idName: this.props.selectedID.id_name,\r\n      idInfo: this.props.selectedID.info,\r\n      status: this.props.selectedID.status,\r\n      idType: this.props.selectedID.id_type,\r\n      multipleSelect: this.props.selectedID.id_role,\r\n      errors: {\r\n        idName: '',\r\n        idInfo: '',\r\n      }\r\n    };\r\n\r\n    // if (this.props.user.user_role === \"Grader\") {\r\n    //   this.state.userRole = 3\r\n    // }\r\n    //\r\n    // if (this.props.user.user_role === \"Student\") {\r\n    //   this.state.userRole = 4\r\n    // }\r\n    //\r\n    // if (this.props.user.phone_number){\r\n    //   this.state.phoneNumber = this.props.user.phone_number\r\n    // } else {\r\n    //   this.state.phoneNumber = ''\r\n    // }\r\n  }\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState({errors});\r\n    }\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onClickSave = () => {\r\n    let errors = this.state.errors;\r\n\r\n    if (this.state.idName === '') {\r\n      errors.idName = 'ID name is required.';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (this.state.idInfo === '') {\r\n      errors.idInfo = 'ID info is required.';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    ApiHelper.put(`/api/id/${this.props.selectedID.id}/`, {\r\n      id_name: this.state.idName,\r\n      id_type: this.state.idType,\r\n      id_role: this.state.multipleSelect,\r\n      id_info: this.state.idInfo,\r\n      status: this.state.status,\r\n    }).then(res => {\r\n      toastr.success('Success!', 'ID was successfully updated.');\r\n      this.props.onSubmit(res.data);\r\n    }).catch(err => {\r\n      console.error(err);\r\n      for(let key in err.response.data.errors) {\r\n        errors[key] = err.response.data.errors[key];\r\n        this.setState({errors});\r\n      }\r\n      toastr.error('Fail!', 'Failed to update ID.');\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.selectedID)\r\n    const {\r\n      errors,\r\n      idName,\r\n      idType,\r\n      idInfo,\r\n      status,\r\n    } = this.state;\r\n\r\n    const {\r\n      show,\r\n      onHide\r\n    } = this.props;\r\n\r\n    return(\r\n      <Modal\r\n        show={show} onHide={onHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit ID</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form horizontal>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Name<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <FormControl placeholder=\"ID Name\" type=\"text\" name=\"idName\" value={idName}\r\n                     onChange={this.handleChangeInput}/>\r\n                <FormFeedback className=\"text-danger\">{errors.idName}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Type<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <Input type=\"select\" className=\"browser-default custom-select\" name=\"idType\" value={idType}\r\n                        onChange={this.handleChangeInput} style={{fontSize: 16, marginTop:10}}>\r\n                  <option value={'Entity'}>Entity</option>\r\n                  <option value={'Individual'}>Individual</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Status<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <Input type=\"select\" className=\"browser-default custom-select\" name=\"status\" value={status}\r\n                        onChange={this.handleChangeInput} style={{fontSize: 16, marginTop:10}}>\r\n                  <option value={'Active'}>Active</option>\r\n                  <option value={'Deleted'}>Deleted</option>\r\n                  <option value={'OnHold'}>OnHold</option>\r\n                </Input>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Roles<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <Select\r\n                  className=\"react-select info\"\r\n                  classNamePrefix=\"react-select\"\r\n                  placeholder=\"Choose Roles\"\r\n                  name=\"multipleSelect\"\r\n                  closeMenuOnSelect={false}\r\n                  isMulti\r\n                  value={this.state.multipleSelect}\r\n                  onChange={value =>\r\n                    this.setState({ multipleSelect: value })\r\n                  }\r\n                  options={[\r\n                    {\r\n                      value: \"\",\r\n                      label: \" Multiple Options\",\r\n                      isDisabled: true\r\n                    },\r\n                    { value: \"2\", label: \"Customer\" },\r\n                    { value: \"3\", label: \"Vendor\" },\r\n                    { value: \"4\", label: \"Lead\" },\r\n                    { value: \"5\", label: \"Contact\" },\r\n                    { value: \"6\", label: \"Employee\" },\r\n                    { value: \"7\", label: \"Contractor\" },\r\n                  ]}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel className=\"col-md-3\">Info<span className=\"star\">*</span></ControlLabel>\r\n              <Col md={9}>\r\n                <FormControl rows=\"5\" componentClass=\"textarea\" placeholder=\"Info\" name=\"idInfo\" value={idInfo}\r\n                     onChange={this.handleChangeInput}/>\r\n                <FormFeedback className=\"text-danger\">{errors.idInfo}</FormFeedback>\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button simple onClick={onHide}>Cancel</Button>\r\n          <Button bsStyle=\"success\" fill onClick={this.onClickSave}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nEditIdModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  onHide: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  selectedID: PropTypes.object\r\n};\r\n\r\nexport default EditIdModal\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport {connect} from \"react-redux\"\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport moment from \"moment\";\r\nimport {Grid, Row, Col, Tooltip, OverlayTrigger} from \"react-bootstrap\";\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport {confirm} from \"../../helpers/commonHelper\";\r\nimport {getUserInfo} from '../../redux/actions/auth.jsx';\r\nimport ApiHelper from \"../../helpers/apiHelper.jsx\";\r\nimport AddIdModal from \"./AddIdModal.jsx\";\r\nimport EditIdModal from \"./EditIdModal\"\r\n\r\nclass IDTables extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ids: [],\r\n      selectedID: null,\r\n      showAddIdModal: false,\r\n      showEditIdModal: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getIds();\r\n  }\r\n\r\n  getIds() {\r\n    ApiHelper.get('/api/id/')\r\n      .then(res => {\r\n        this.setState({ids: res.data});\r\n      });\r\n  }\r\n\r\n  showAddIdModal = () =>{\r\n    this.setState({showAddIdModal: true\r\n    })\r\n  };\r\n\r\n  hideAddIdModal = () =>{\r\n    this.setState({showAddIdModal: false\r\n    })\r\n  };\r\n\r\n  onAddId = user => {\r\n    let ids = this.state.ids;\r\n    ids.push(user);\r\n    this.setState({ids});\r\n    this.hideAddIdModal();\r\n  };\r\n\r\n  onEditId = user => {\r\n    let ids = this.state.ids;\r\n    let index = ids.findIndex(item => item.id === user.id);\r\n    ids[index] = user;\r\n    this.setState({ids});\r\n    this.hideEditIdModal();\r\n  };\r\n\r\n  openEditIdModal = (e, row) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      selectedID: row,\r\n      showEditIdModal: true\r\n    });\r\n  };\r\n\r\n  hideEditIdModal = () => {\r\n    this.setState({\r\n      selectedID: null,\r\n      showEditIdModal: false\r\n    });\r\n  };\r\n\r\n  deleteId = (e, userID) => {\r\n    e.stopPropagation();\r\n    confirm('Are you sure you want to delete this ID?', {\r\n      title: 'Delete ID'\r\n    }).then(() => {\r\n      ApiHelper.delete(`/api/id/${userID}/`)\r\n        .then(res => {\r\n          let ids = this.state.ids;\r\n          let index = ids.findIndex(item => item.id === userID);\r\n          ids.splice(index, 1);\r\n          this.setState({ids});\r\n          toastr.success('Success!', 'ID was successfully deleted.');\r\n        }).catch(err => {\r\n        console.log(err);\r\n        toastr.error('Fail!', 'Failed to delete ID.');\r\n      });\r\n    });\r\n  };\r\n\r\n  renderCell = (row) => {\r\n    const {\r\n      showEditIdModal,\r\n      selectedID\r\n    } = this.state\r\n\r\n    const edit = <Tooltip id=\"edit_tooltip\">Edit ID</Tooltip>;\r\n    const remove = <Tooltip id=\"remove_tooltip\">Delete ID</Tooltip>;\r\n\r\n    return(\r\n      <div>\r\n        <OverlayTrigger placement=\"top\" overlay={edit}>\r\n          <Button\r\n            // bsStyle=\"info\"\r\n            simple\r\n            icon\r\n            onClick={\r\n              (e) => this.openEditIdModal(e, row.original)\r\n            }\r\n          >\r\n            <i className=\"fa fa-edit fa-lg\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n        {\r\n          showEditIdModal &&\r\n          selectedID.id === row.original.id &&\r\n          <EditIdModal\r\n            show={showEditIdModal}\r\n            onHide={this.hideEditIdModal}\r\n            onSubmit={this.onEditId}\r\n            selectedID={selectedID}\r\n          />\r\n        }\r\n        <OverlayTrigger placement=\"top\" overlay={remove}>\r\n          <Button\r\n            // bsStyle=\"danger\"\r\n            simple\r\n            icon\r\n            onClick={\r\n              (e) => this.deleteId(e, row.original.id)\r\n            }\r\n          >\r\n            <i className=\"fa fa-trash fa-lg\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      ids,\r\n      showAddIdModal,\r\n    } = this.state\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12} style={{marginBottom: 30}}>\r\n              <button type=\"btn\" className=\"btn btn-info\"\r\n                      style={{fontSize:18}} onClick={this.showAddIdModal}>Add ID</button>\r\n              {\r\n                showAddIdModal &&\r\n                <AddIdModal\r\n                    {...this.props}\r\n                    show={showAddIdModal}\r\n                    onHide={this.hideAddIdModal}\r\n                    onSubmit={this.onAddId}\r\n                />\r\n              }\r\n            </Col>\r\n            <Col md={12}>\r\n              <Card\r\n                title = \"IDS\"\r\n                content={\r\n                  <ReactTable\r\n                    data={ids}\r\n                    columns={[\r\n                      {\r\n                        Header: \"NAME\",\r\n                        accessor: \"id_name\",\r\n                        sortable: true,\r\n                      },\r\n                      {\r\n                        Header: \"TYPE\",\r\n                        accessor: \"id_type\",\r\n                        sortable: true\r\n                      },\r\n                      {\r\n                        Header: \"ROLE\",\r\n                        accessor: \"id_role\",\r\n                        sortable: false\r\n                      },\r\n                      // {\r\n                      //   Header: \"ENTITY\",\r\n                      //   accessor: \"id_entities\",\r\n                      //   sortable: false\r\n                      // },\r\n                      {\r\n                        Header: \"ID ADDED\",\r\n                        accessor: \"date\",\r\n                        Cell: row => (\r\n                          <span>{moment(row.original.updated_at).format('YYYY-MM-DD')}</span>\r\n                        )\r\n                      },\r\n                      {\r\n                        Header: \"STATUS\",\r\n                        accessor: \"status\",\r\n                      },\r\n                      {\r\n                        Header: \"INFO\",\r\n                        accessor: \"info\",\r\n                      },\r\n                      {\r\n                        Header: \"Actions\",\r\n                        accessor: \"actions\",\r\n                        sortable: false,\r\n                        filterable: false,\r\n                        style: {\r\n                          textAlign: \"center\"\r\n                        },\r\n                        Cell: this.renderCell\r\n                      }\r\n                    ]}\r\n                    defaultPageSize={10}\r\n                    showPaginationTop={false}\r\n                    showPaginationBottom={true}\r\n                    className=\"-striped -highlight\"\r\n                    noDataText=\"No Ids Found\"\r\n                  />\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getUserInfo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IDTables);\r\n","import LoginPage from \"./containers/Login\";\r\nimport RegisterPage from \"./containers/Login/Register\";\r\nimport EditProfile from \"./containers/profile\";\r\nimport IDTables from \"./containers/IDs\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    access: \"auth\",\r\n    name: \"Login Page\",\r\n    icon: \"pe-7s-info\",\r\n    component: LoginPage\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    access: \"auth\",\r\n    name: \"Register Page\",\r\n    icon: \"pe-7s-info\",\r\n    component: RegisterPage\r\n  },\r\n  {\r\n    path: \"/edit_profile\",\r\n    access: \"common\",\r\n    name: \"EDIT PROFILE\",\r\n    show: \"false\",\r\n    icon: \"pe-7s-info\",\r\n    component: EditProfile\r\n  },\r\n  {\r\n    path: \"/id\",\r\n    access: \"common\",\r\n    name: \"ID\",\r\n    show: \"true\",\r\n    icon: \"pe-7s-users\",\r\n    component: IDTables\r\n  },\r\n  {\r\n    path: \"/entities\",\r\n    access: \"common\",\r\n    name: \"Entities\",\r\n    show: \"true\",\r\n    icon: \"pe-7s-users\",\r\n    component: IDTables\r\n  },\r\n  {\r\n    path: \"/models\",\r\n    access: \"common\",\r\n    name: \"COAModels\",\r\n    show: \"true\",\r\n    icon: \"pe-7s-users\",\r\n    component: IDTables\r\n  },\r\n  {\r\n    path: \"/accounts\",\r\n    access: \"common\",\r\n    name: \"Accounts\",\r\n    show: \"true\",\r\n    icon: \"pe-7s-users\",\r\n    component: IDTables\r\n  },\r\n  {\r\n    path: \"/journals\",\r\n    access: \"common\",\r\n    name: \"Journals\",\r\n    show: \"true\",\r\n    icon: \"pe-7s-users\",\r\n    component: IDTables\r\n  },\r\n  {\r\n    path: \"/plans\",\r\n    access: \"common\",\r\n    name: \"Plans\",\r\n    show: \"true\",\r\n    icon: \"pe-7s-users\",\r\n    component: IDTables\r\n  },\r\n];\r\nexport default routes;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthNavbar from \"./Navbars/AuthNavbar.jsx\";\nimport routes from \"../../routes.js\";\nimport bgImage from \"../../assets/img/full-screen-image-3.jpg\";\n\nclass Pages extends Component {\n  componentWillMount() {\n    if (document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n  }\n\n  getPageClass() {\n    let pageClass = \"\";\n    switch (this.props.location.pathname) {\n      case \"/login\":\n        pageClass = \" login\";\n        break;\n      // case \"/register\":\n      //   pageClass = \" register\";\n      //   break;\n      default:\n        pageClass = \"\";\n        break;\n    }\n    return pageClass;\n  }\n\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.path === \"/login\") {\n        return (\n          <Route\n            path={prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <AuthNavbar />\n        <div className=\"wrapper wrapper-full-page\">\n          <div\n            className={\"full-page\" + this.getPageClass()}\n            data-color=\"black\"\n            data-image={bgImage}\n          >\n            <div className=\"content\">\n              <Switch>{this.getRoutes(routes)}</Switch>\n            </div>\n            <div\n              className=\"full-page-background\"\n              style={{ backgroundImage: \"url(\" + bgImage + \")\" }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pages;\n","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  FormGroup,\n  FormControl,\n  InputGroup\n} from \"react-bootstrap\";\n\nclass HeaderLinks extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar.Form pullLeft className=\"navbar-search-form\">\n          <FormGroup>\n            <InputGroup>\n              <InputGroup.Addon>\n                <i className=\"fa fa-search\" />\n              </InputGroup.Addon>\n              <FormControl type=\"text\" placeholder=\"Search...\" />\n            </InputGroup>\n          </FormGroup>\n        </Navbar.Form>\n      </div>\n    );\n  }\n}\n\nexport default HeaderLinks;\n","import React, { Component } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport AdminNavbarLinks from \"./Navbars/AdminNavbarLinks.jsx\";\r\nimport routes from \"../../routes.js\";\r\n\r\nimport avatar from \"../../assets/img/1.jpg\";\r\nimport logo from \"../../logo.svg\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...this.getCollapseStates(routes),\r\n      openAvatar: false,\r\n      width: window.innerWidth\r\n    };\r\n  }\r\n\r\n  getCollapseStates = routes => {\r\n    let initialState = {};\r\n    routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        initialState = {\r\n          [prop.state]: this.getCollapseInitialState(prop.views),\r\n          ...this.getCollapseStates(prop.views),\r\n          ...initialState\r\n        };\r\n      }\r\n      return null;\r\n    });\r\n    return initialState;\r\n  };\r\n\r\n  getCollapseInitialState(routes) {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\r\n        return true;\r\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createLinks = routes => {\r\n    let userRole = this.props.user ? this.props.user.user_role: \"\";\r\n    return routes.map((prop, key) => {\r\n      if (prop.redirect) {\r\n        return null;\r\n      }\r\n      if (prop.collapse) {\r\n        var st = {};\r\n        st[prop[\"state\"]] = !this.state[prop.state];\r\n        return (\r\n          <li\r\n            className={this.getCollapseInitialState(prop.views) ? \"active\" : \"\"}\r\n            key={key}\r\n          >\r\n            <a\r\n              href=\"#pablo\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                this.setState(st);\r\n              }}\r\n            >\r\n              <i className={prop.icon} />\r\n              <p>\r\n                {prop.name}\r\n                <b\r\n                  className={\r\n                    this.state[prop.state] ? \"caret rotate-180\" : \"caret\"\r\n                  }\r\n                />\r\n              </p>\r\n            </a>\r\n            <Collapse in={this.state[prop.state]}>\r\n              <ul className=\"nav\">{this.createLinks(prop.views)}</ul>\r\n            </Collapse>\r\n          </li>\r\n        );\r\n      }\r\n      if (((prop.access === userRole)||(prop.access === \"common\"))&&(prop.show === \"true\")){\r\n      return (\r\n        <li className={this.activeRoute(prop.path)} key={key}>\r\n          <NavLink\r\n            to={prop.path}\r\n            className=\"nav-link\"\r\n            activeClassName=\"active\"\r\n          >\r\n            {prop.icon ? (\r\n              <>\r\n                <i className={prop.icon} />\r\n                <p>{prop.name}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"sidebar-mini\">{prop.mini}</span>\r\n                <span className=\"sidebar-normal\">{prop.name}</span>\r\n              </>\r\n            )}\r\n          </NavLink>\r\n        </li>\r\n      );\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  activeRoute = routeName => {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  };\r\n\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    // let text = this.props.user ? this.props.user.user_role: \"\";\r\n    let userName = this.props.user ?\r\n      (this.props.user.first_name ? this.props.user.first_name + \" \" + this.props.user.last_name : this.props.user.email)\r\n      : \"\";\r\n    return (\r\n      <div\r\n        className=\"sidebar\"\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div\r\n            className=\"sidebar-background\"\r\n            style={{ backgroundImage: \"url(\" + this.props.image + \")\" }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"logo\">\r\n          <a\r\n            href=\"#pablo\"\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n          <a\r\n            href=\"#pablo\"\r\n            className=\"simple-text logo-normal\"\r\n            target=\"_blank\"\r\n          >\r\n            Dashboard\r\n          </a>\r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebarWrapper\">\r\n          <div className=\"user\">\r\n            <div className=\"photo\">\r\n              <img src={avatar} alt=\"Avatar\" />\r\n            </div>\r\n            <div className=\"info\">\r\n              <a\r\n                href=\"#pablo\"\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  this.setState({ openAvatar: !this.state.openAvatar });\r\n                }}\r\n              >\r\n                <span>\r\n                  {userName}\r\n                  <b\r\n                    className={\r\n                      this.state.openAvatar ? \"caret rotate-180\" : \"caret\"\r\n                    }\r\n                  />\r\n                </span>\r\n              </a>\r\n              <Collapse in={this.state.openAvatar}>\r\n                <ul className=\"nav\">\r\n                  <li>\r\n                    <Link to=\"/edit_profile\">\r\n                      <span className=\"sidebar-mini\">EP</span>\r\n                      <span className=\"sidebar-normal\">Edit Profile</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/sign-out\">\r\n                      <span className=\"sidebar-mini\">S</span>\r\n                      <span className=\"sidebar-normal\" onClick={() => this.props.logout()}>Sign Out</span>\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </Collapse>\r\n            </div>\r\n          </div>\r\n          <ul className=\"nav\">\r\n            {this.state.width <= 992 ? <AdminNavbarLinks /> : null}\r\n            {this.createLinks(routes)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSidebar.propTypes = {\r\n  logout: PropTypes.func,\r\n  user: PropTypes.object\r\n};\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport routes from \"../../../routes.js\";\n\nclass AdminNavbar extends Component {\n  getActiveRoute = routes => {\n    let activeRoute = \"Welcome to Home\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = this.getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else {\n        if (\n            window.location.href.indexOf(routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  mobileSidebarToggle = e => {\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n\n  render() {\n    return (\n      <Navbar fluid className={this.props.navbar ? \"navbar-fixed\" : \"\"}>\n        <div className=\"navbar-minimize\">\n          <button\n            id=\"minimizeSidebar\"\n            className=\"btn btn-default btn-fill btn-round btn-icon\"\n            onClick={this.props.handleMiniClick}\n          >\n            <i className=\"fa fa-ellipsis-v visible-on-sidebar-regular\" />\n            <i className=\"fa fa-navicon visible-on-sidebar-mini\" />\n          </button>\n        </div>\n        <Navbar.Header>\n          <Navbar.Brand>\n            {/* Here we create navbar brand, based on route name */}\n            <a href=\"#pablo\">{this.getActiveRoute(routes)}</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n      </Navbar>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\nimport image from \"../../assets/img/full-screen-image-3.jpg\";\r\nimport Sidebar from \"./Sidebar.jsx\";\r\nimport AdminNavbar from \"./Navbars/AdminNavbar.jsx\";\r\nimport {logout, getUserInfo} from '../../redux/actions/auth.jsx';\r\nimport routes from \"../../routes.js\";\r\n// import {Redirect} from \"react-router\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      navbar: false,\r\n      mini: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserInfo();\r\n  }\r\n\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.action === \"PUSH\" &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (document.documentElement.className.indexOf(\"nav-open\") !== -1) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n  }\r\n\r\n  handleMiniClick = () => {\r\n    this.setState({ mini: !this.state.mini });\r\n    document.body.classList.toggle(\"sidebar-mini\");\r\n  }\r\n\r\n  getRoutes = routes => {\r\n    // let userRole = this.props.user ? this.props.user.user_role: \"\";\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return this.getRoutes(prop.views);\r\n      }\r\n      if (prop.access === \"common\") {\r\n        return (\r\n          <Route\r\n            exact\r\n            path={prop.path}\r\n            key={key}\r\n            render={routeProps => (\r\n              <prop.component\r\n                {...routeProps}\r\n                // handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if(!this.props.user){\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Sidebar\r\n          {...this.props}\r\n          image={this.state.image}\r\n          color={this.state.color}\r\n          hasImage={this.state.hasImage}\r\n          mini={this.state.mini}\r\n        />\r\n        <div\r\n          className={\r\n            \"main-panel\" +\r\n            (this.props.location.pathname === \"/maps/full-screen-maps\"\r\n              ? \" main-panel-maps\"\r\n              : \"\")\r\n          }\r\n          ref=\"mainPanel\"\r\n        >\r\n          <AdminNavbar\r\n            {...this.props}\r\n            handleMiniClick={this.handleMiniClick}\r\n            navbar={this.state.navbar}\r\n          />\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logout,\r\n  getUserInfo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React, {Component} from \"react\";\r\nimport {Grid, Row, Col, FormGroup, ControlLabel, FormControl, Form} from \"react-bootstrap\";\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport AuthNavbar from '../Layout/Navbars/AuthNavbar'\r\nimport bgImage from \"../../assets/img/full-screen-image-3.jpg\";\r\n// import queryString from \"query-string\";\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport ApiHelper from \"../../helpers/apiHelper\";\r\nimport {Redirect} from \"react-router\";\r\nimport {FormFeedback} from \"reactstrap\"\r\n\r\nclass EmailVerificationPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardHidden: true,\r\n      email: '',\r\n      code: '',\r\n      errors: {\r\n        email: '',\r\n        code: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(\r\n      function() {\r\n        this.setState({ cardHidden: false });\r\n      }.bind(this),\r\n      700\r\n    );\r\n  }\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState({errors});\r\n    }\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  handleVerify = e => {\r\n    e.preventDefault();\r\n\r\n    let email = this.state.email;\r\n    let code = this.state.code;\r\n    let errors = this.state.errors;\r\n\r\n    if (email === '') {\r\n      errors.email = 'Email address is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    if (code === '') {\r\n      errors.code = 'Verification code is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    ApiHelper.post('/api/auth/verify_email', {\r\n      code: code,\r\n      email: email\r\n    }, {}, false).then(res => {\r\n      this.props.history.push('/login');\r\n    }).catch(err => {\r\n      toastr.error('Fail!', 'Failed to verify email address');\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.history.push('/register')\r\n  };\r\n\r\n  handleResend = e => {\r\n    e.preventDefault();\r\n\r\n    let email = this.state.email;\r\n    let errors = this.state.errors;\r\n\r\n    if (email === '') {\r\n      errors.email = 'Email address is required';\r\n      this.setState({errors});\r\n      return;\r\n    }\r\n\r\n    ApiHelper.post('/api/auth/resend_email', {\r\n      email: email\r\n    }, {}, false).then(res => {\r\n      toastr.success('Success!', 'Please check your email');\r\n    }).catch(err => {\r\n      toastr.error('Fail!', 'Failed to resend email');\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isAuthenticated) {\r\n      return (\r\n        <Redirect to='/'/>\r\n      );\r\n    }\r\n    let {email, code, errors} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AuthNavbar />\r\n        <div className=\"wrapper wrapper-full-page\">\r\n          <div\r\n            className={\"full-page login\"}\r\n            data-color=\"black\"\r\n            data-image={bgImage}\r\n          >\r\n            <div className=\"content\">\r\n              <Grid>\r\n                <Row>\r\n                  <Col md={5} sm={6} mdOffset={4} smOffset={3}>\r\n                    <Form horizontal>\r\n                      <Card\r\n                        hidden={this.state.cardHidden}\r\n                        textCenter\r\n                        title=\"Verify Your Email Address\"\r\n                        content={\r\n                          <div>\r\n                            <FormGroup>\r\n                              <ControlLabel className=\"col-md-3\">Email<span className=\"star\">*</span></ControlLabel>\r\n                              <Col md={6}>\r\n                                <FormControl placeholder=\"Enter your email address\" type=\"email\" name=\"email\" value={email}\r\n                                     onChange={this.handleChangeInput}/>\r\n                                <FormFeedback className=\"text-danger\">{errors.email}</FormFeedback>\r\n                              </Col>\r\n                              <Col md={3}>\r\n                                <Button bsStyle=\"success\" pullRight fill onClick={this.handleResend}>\r\n                                  Resend\r\n                                </Button>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <ControlLabel className=\"col-md-3\">Code<span className=\"star\">*</span></ControlLabel>\r\n                              <Col md={9}>\r\n                                <FormControl placeholder=\"Enter your code\" type=\"text\" name=\"code\" value={code}\r\n                                     onChange={this.handleChangeInput}/>\r\n                                <FormFeedback className=\"text-danger\">{errors.code}</FormFeedback>\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </div>\r\n                        }\r\n                        legend={\r\n                          <div>\r\n                            <Button bsStyle=\"info\" fill onClick={this.handleVerify}>\r\n                              Verify\r\n                            </Button>\r\n                            <Button bsStyle=\"warning\" pullRight fill onClick={this.handleCancel}>\r\n                              Cancel\r\n                            </Button>\r\n                          </div>\r\n                        }\r\n                        ftTextCenter\r\n                      />\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              className=\"full-page-background\"\r\n              style={{ backgroundImage: \"url(\" + bgImage + \")\" }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmailVerificationPage;\r\n","import React, {Component} from 'react';\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport {FormFeedback} from \"reactstrap\"\r\nimport {Grid, Row, Col, FormGroup, FormControl} from \"react-bootstrap\";\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport bgImage from \"../../assets/img/full-screen-image-3.jpg\";\r\nimport AuthNavbar from \"../Layout/Navbars/AuthNavbar.jsx\";\r\nimport ApiHelper from '../../helpers/apiHelper.jsx';\r\n\r\nclass ResetPasswordEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardHidden : true,\r\n      users: [],\r\n      errors: {\r\n        email: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.getUsers();\r\n    setTimeout(\r\n      function() {\r\n        this.setState({ cardHidden: false });\r\n      }.bind(this),\r\n      700\r\n    );\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let email = e.target.elements.email.value;\r\n    let errors = this.state.errors;\r\n\r\n    if (email === '') {\r\n      errors.email = 'Email address is required.';\r\n      this.setState(errors);\r\n      return;\r\n    }\r\n\r\n    ApiHelper.post('/api/auth/user/reset_password', {\r\n      email: email\r\n    }, {},  false).then(res => {\r\n      toastr.success('Success!', 'Reset Password request was successfully sent.');\r\n      this.props.history.push('/login');\r\n    }).catch(err => {\r\n      toastr.error('Fail!', 'This is not a verified email address.');\r\n      // this.props.history.push('/login');\r\n    })\r\n\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState(errors);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {errors} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AuthNavbar />\r\n        <div className=\"wrapper wrapper-full-page\">\r\n          <div\r\n            className={\"full-page login\"}\r\n            data-color=\"black\"\r\n            data-image={bgImage}\r\n          >\r\n            <div className=\"content\">\r\n              <Grid>\r\n                <Row>\r\n                  <Col md={4} sm={6} mdOffset={4} smOffset={3}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                      <Card\r\n                        hidden={this.state.cardHidden}\r\n                        textCenter\r\n                        title=\"Reset your password\"\r\n                        content={\r\n                          <div>\r\n                            <p>Enter your user account's verified email address and we will send you a password reset link.</p>\r\n                            <FormGroup>\r\n                              <FormControl placeholder=\"Enter your email address\" name=\"email\" type=\"email\"\r\n                                     onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.email}</FormFeedback>\r\n                            </FormGroup>\r\n                          </div>\r\n                        }\r\n                        legend={\r\n                          <div>\r\n                            <Button bsStyle=\"info\" fill wd type=\"submit\">\r\n                              Send Password Reset Email\r\n                            </Button>\r\n                          </div>\r\n                        }\r\n                        ftTextCenter\r\n                      />\r\n                    </form>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              className=\"full-page-background\"\r\n              style={{ backgroundImage: \"url(\" + bgImage + \")\" }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPasswordEmail;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {toastr} from \"react-redux-toastr\";\r\nimport queryString from \"query-string\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {FormFeedback} from \"reactstrap\"\r\nimport {Grid, Row, Col, FormGroup, ControlLabel, FormControl} from \"react-bootstrap\";\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\r\nimport bgImage from \"../../assets/img/full-screen-image-3.jpg\";\r\nimport AuthNavbar from \"../Layout/Navbars/AuthNavbar.jsx\";\r\nimport AuthHelper from '../../helpers/authHelper.jsx';\r\nimport ApiHelper from '../../helpers/apiHelper.jsx';\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardHidden : true,\r\n      errors: {\r\n        password: '',\r\n        confirmPassword: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(\r\n      function() {\r\n        this.setState({ cardHidden: false });\r\n      }.bind(this),\r\n      700\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.parameters = queryString.parse(this.props.location.search);\r\n    if (!this.parameters.uid || !this.parameters.token) {\r\n      this.props.history.push('/login')\r\n    }\r\n  }\r\n\r\n  handleLogin = e => {\r\n    e.preventDefault();\r\n    let password = e.target.elements.password.value;\r\n    let confirmPassword = e.target.elements.confirmPassword.value;\r\n    let errors = this.state.errors;\r\n\r\n    if (password === '') {\r\n      errors.password = 'Password is required.';\r\n      this.setState(errors);\r\n      return;\r\n    }\r\n\r\n    if (confirmPassword === '') {\r\n      errors.confirmPassword = 'ConfirmPassword is required.';\r\n      this.setState(errors);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      errors.confirmPassword = 'Password does not match.';\r\n      this.setState(errors);\r\n      return;\r\n    }\r\n\r\n    ApiHelper.post('/api/auth/login/create_password', {\r\n      uid: this.parameters.uid,\r\n      token: this.parameters.token,\r\n      password\r\n    }, {},  false).then(res => {\r\n      toastr.success('Success!', 'Password was successfully reset.');\r\n      this.props.history.push('/login');\r\n    }).catch(err => {\r\n      toastr.error('Fail!', 'Password was already created.');\r\n      // this.props.history.push('/login');\r\n    })\r\n\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    let errors = this.state.errors;\r\n    if (errors[e.target.name] !== '') {\r\n      errors[e.target.name] = '';\r\n      this.setState(errors);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isAuthenticated) {\r\n      return (\r\n        <Redirect to='/'/>\r\n      );\r\n    }\r\n\r\n    let {errors} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <AuthNavbar />\r\n        <div className=\"wrapper wrapper-full-page\">\r\n          <div\r\n            className={\"full-page login\"}\r\n            data-color=\"black\"\r\n            data-image={bgImage}\r\n          >\r\n            <div className=\"content\">\r\n              <Grid>\r\n                <Row>\r\n                  <Col md={4} sm={6} mdOffset={4} smOffset={3}>\r\n                    <form onSubmit={this.handleLogin}>\r\n                      <Card\r\n                        hidden={this.state.cardHidden}\r\n                        textCenter\r\n                        title=\"Reset Password\"\r\n                        content={\r\n                          <div>\r\n                            <FormGroup>\r\n                              <ControlLabel>Password<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"Password\" name=\"password\" type=\"password\" autoComplete=\"off\"\r\n                                           invalid={errors.password !== ''} onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.password}</FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <ControlLabel>Confirm Password<span className=\"star\">*</span></ControlLabel>\r\n                              <FormControl placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"off\"\r\n                                           name=\"confirmPassword\" invalid={errors.confirmPassword !== ''}\r\n                                           onChange={this.handleChangeInput}/>\r\n                              <FormFeedback className=\"text-danger\">{errors.confirmPassword}</FormFeedback>\r\n                            </FormGroup>\r\n                          </div>\r\n                        }\r\n                        legend={\r\n                          <div>\r\n                            <Button bsStyle=\"info\" fill wd type=\"submit\">\r\n                              Change Password\r\n                            </Button>\r\n                            <Button simple onClick={() => this.props.history.push('/login')}>\r\n                              Cancel\r\n                            </Button>\r\n                          </div>\r\n                        }\r\n                        ftTextCenter\r\n                      />\r\n                    </form>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </div>\r\n            <div\r\n              className=\"full-page-background\"\r\n              style={{ backgroundImage: \"url(\" + bgImage + \")\" }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: AuthHelper.isAuthenticated(state.auth)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter  } from 'connected-react-router'\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport {Provider} from 'react-redux';\r\nimport {store, persistor, history} from './redux/store.jsx';\r\nimport ReduxToastr from 'react-redux-toastr'\r\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"assets/sass/light-bootstrap-dashboard-pro-react.scss?v=1.2.0\";\r\nimport \"assets/css/demo.css\";\r\nimport \"assets/css/pe-icon-7-stroke.css\";\r\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute.jsx\";\r\nimport AuthLayout from \"./containers/Layout/Auth\";\r\nimport AdminLayout from \"./containers/Layout/Admin\";\r\nimport RegisterPage from \"./containers/Login/Register\";\r\n// import PhoneVerificationPage from \"./containers/Login/PhoneVerification\";\r\nimport EmailVerificationPage from \"./containers/Login/EmailVerification\";\r\n// import PhoneVerificationCodePage from \"./containers/Login/PhoneVerificationCode\";\r\nimport ResetPasswordEmail from \"./containers/Login/ResetPasswordEmail\";\r\nimport ResetPassword from \"./containers/Login/ResetPassword\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <ConnectedRouter  history={history}>\r\n        <React.Fragment>\r\n          <Switch>\r\n            <Route exact path=\"/login\" render={props => <AuthLayout {...props} />} />\r\n            <Route exact path=\"/login/email_verification\" component={EmailVerificationPage}/>\r\n            {/*<Route exact path=\"/login/phone_verification\" component={PhoneVerificationPage}/>*/}\r\n            {/*<Route exact path=\"/login/phone_verification_code\" component={PhoneVerificationCodePage}/>*/}\r\n            <Route exact path=\"/register\" component={RegisterPage}/>\r\n            <Route exact path=\"/reset_password\" component={ResetPasswordEmail}/>\r\n            <Route exact path=\"/login/reset_password\" component={ResetPassword}/>\r\n            <PrivateRoute path=\"/\" component={AdminLayout}/>\r\n          </Switch>\r\n          <ReduxToastr timeOut={3000} transitionIn=\"fadeIn\" transitionOut=\"fadeOut\"/>\r\n        </React.Fragment>\r\n      </ConnectedRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}